# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: React Project CICD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: |
        touch .env
        echo "${{ secrets.PROD_REACT_ENV_FILE }}" > .env
    - run: |
        #!/bin/bash
        set -e  # Exit on any error

        # Define directories
        SOURCE_DIR="/var/www/html/actions-runner_react/_work/admints/admints/"
        TEMP_DIR="/var/www/html/actions-runner_react/_work/admints/admints_copy/"

        # Step 1: Create a backup of the application
        echo "Creating backup of the application..."
        rsync -av "$SOURCE_DIR" "$TEMP_DIR"

        # Step 2: Navigate to the backup directory
        cd "$TEMP_DIR" || { echo "Failed to navigate to $TEMP_DIR! Exiting."; exit 1; }

        # Install dependencies
        echo "Installing dependencies..."
        npm install

        echo "Dependencies installed successfully!"

        # Step 3: Clean and rebuild the application
        echo "Removing old build..."
        rm -rf build
        echo "Clearing npm cache..."
        npm cache clean --force
        echo "Building the application..."
        npm run build --if-present

        # Step 4: Replace the old build with the new one
        echo "Replacing old build with new build..."
        cp -Rf build "$SOURCE_DIR"

        # Step 5: Clean up temporary files
        echo "Cleaning up temporary files..."
        rm -rf "$TEMP_DIR"

        echo "Application build and deployment completed successfully!"
    - run: sudo pm2 reload all
